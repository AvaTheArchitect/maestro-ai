type Mode = 'Ionian' | 'Dorian' | 'Phrygian' | 'Lydian' | 'Mixolydian' | 'Aeolian' | 'Locrian';
type ScaleType = 'Diatonic' | 'Pentatonic' | 'Blues' | 'Harmonic Minor';

const NOTE_SEQUENCE = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];

const MODE_INTERVALS: Record<Mode, number[]> = {
  Ionian:        [2, 2, 1, 2, 2, 2, 1],
  Dorian:        [2, 1, 2, 2, 2, 1, 2],
  Phrygian:      [1, 2, 2, 2, 1, 2, 2],
  Lydian:        [2, 2, 2, 1, 2, 2, 1],
  Mixolydian:    [2, 2, 1, 2, 2, 1, 2],
  Aeolian:       [2, 1, 2, 2, 1, 2, 2],
  Locrian:       [1, 2, 2, 1, 2, 2, 2],
};

export function getScaleNotes(root: string, scaleType: ScaleType, mode: Mode): string[] {
  const intervals = MODE_INTERVALS[mode];
  const rootIndex = NOTE_SEQUENCE.indexOf(root);
  if (rootIndex === -1) return [];

  let notes: string[] = [NOTE_SEQUENCE[rootIndex]];
  let idx = rootIndex;

  for (const step of intervals) {
    idx = (idx + step) % NOTE_SEQUENCE.length;
    notes.push(NOTE_SEQUENCE[idx]);
  }

  return notes;
}

